import cv2
from cvzone.HandTrackingModule import HandDetector
from time import sleep

cap = cv2.VideoCapture(0)
cap.set(3, 1280)
cap.set(4, 720)

detector = HandDetector(detectionCon=0.8)

elements = [["Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P"],
            ["A", "S", "D", "F", "G", "H", "J", "K", "L", ";"],
            ["Z", "X", "C", "V", "B", "N", "M", ",", ".", "/"]]

result = ""
def draw(image, buttonn):
    for button in buttonn:
        x, y = button.pos
        w, h = button.size
        cv2.rectangle(image, button.pos, (x + w, y + h), (0, 0, 0), cv2.FILLED)
        cv2.putText(image, button.text, (x + 25, y + 68), cv2.FONT_HERSHEY_PLAIN, 4, (255, 255, 255),
                    5)
    return image


class Button():
    def __init__(self, pos, text, size=[85, 85]):
        self.pos = pos
        self.size = size
        self.text = text


buttonn = []
for i in range(len(elements)):
    for x, key in enumerate(elements[i]):
        buttonn.append(Button([100 * x + 50, 100 * i + 50], key))

while True:
    success, image = cap.read()
    image = detector.findHands(image)
    landmark, boundbox = detector.findPosition(image)
    image = draw(image, buttonn)

    if landmark:
        for button in buttonn:
            x, y = button.pos
            w, h = button.size

            if x < landmark[8][0] < x + w and y < landmark[8][1] < y + h:
                cv2.rectangle(image, button.pos, (x + w, y + h), (150, 150, 150), cv2.FILLED)
                cv2.putText(image, button.text, (x + 25, y + 68), cv2.FONT_HERSHEY_PLAIN, 4, (255, 255, 255),
                            5)
                l, _, _ = detector.findDistance(8, 12, image, draw = False)
                print(l)

                if l < 15:
                    cv2.rectangle(image, button.pos, (x + w, y + h), (225, 225, 225), cv2.FILLED)
                    cv2.putText(image, button.text, (x + 25, y + 68), cv2.FONT_HERSHEY_PLAIN, 4, (255, 255, 255),
                                5)
                    result += button.text
                    sleep(0.25)

    cv2.rectangle(image, (50, 350), (950, 450), (0, 0, 0), cv2.FILLED)
    cv2.putText(image, result, (60, 425), cv2.FONT_HERSHEY_PLAIN, 4, (255, 255, 255), 5)

    cv2.imshow("Screen", image)
    cv2.waitKey(1)
